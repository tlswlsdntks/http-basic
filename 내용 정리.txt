-- 인터넷 통신 및 인터넷 프로토콜 --
IP(인터넷 프로토콜)
: 지정한 IP 주소에 패킷이라는 통신 단위로 데이터를 전달

예시)
출발: 100.100.100.1
목적: 200.200.200.1

경로)
클라이언트 -> 노드 -> 패킷 -> 서버
서버 -> 노드 -> 패킷 -> 클라이언트

한계)
비연결성: 대상 서버가 패킷을 받을 수 있는 상태인 지 모르는 경우
비신뢰성: 패킷소실, 패킷 전달 순서 문제("Hello" "World" -> "World" "Hello")
프로그램 구분: 같은 IP를 사용하는 서버에서 통신하는 어플리케이션이 둘 이상인 경우


-- TCP/UDP --
[인터넷 프로토콜 스택의 4계층]
애플리케이션 계층 - HTTP, FTP
전송 계층 - TCP, UDP
인터넷 계층 - IP
네트워크 인터페이스 계층

구체화)
어플리케이션          - 웹 브라우저, 네트워크 게임, 채팅 프로그램
                        소켓 라이브러리
OS(운영체제)          - TCP, UDP
                        IP(인터넷 프로토콜)
네트워크 인터페이스   - LAN 드라이버, LAN 장비

경로)
프로그램이 "Hello World" 메세지 생성 -> 소켓 라이브러리를 통해 OS에 전달 -> TCP 정보 생성 및 "Hello World" 메세지 데이터 포함 
-> IP 패킷 생성, TCP 정보 데이터 포함 -> LAN 카드 -> 인터넷 -> 서버

TCP/IP 패킷 정보)
IP: 출발지 IP, 목적지 IP, ... (전송데이터 포함)
TCP: 출발지 PORT, 목적지 PORT, 전송제어, 순서, 검증정보, ... (전송데이터 포함)

TCP
: 전송 제어 프로토콜

특징)
연결지향(TCP 3 way handshake, 가상연결) -> SYN(접속 요청), ACK(요청 수락)
 1.SYN,
 2.SYN + ACK,
 3.ACK (3.ACK와 함께 데이터 전송도 가능)
데이터 전달 보증: 데이터 전송 -> 데이터 전송 잘받음(답변)
순서보장: 패킷1, 패킷2, 패킷3 -> 패킷1, 패킷3(X), 패킷2 -> 패킷2부터 다시 보내라고 요청
신뢰할 수 있는 프로토콜
* 현재 대부분 TCP 사용

UDP
:사용자 데이터 프로토콜

특징)
하얀 도화지(기능이 거의 없음)
연결지향(TCP 3 way handshake, 가상연결) -> X
데이터 전달 보증 -> X
순서보장 -> X
데이터 전달 및 순서가 보장되지 않지만, 단순하고 빠름

정리) 
IP와 거의 같고, 
PORT 및 체크섬(네트워크를 통해서 전송된 데이터의 값이 변경되었는지(무결성)를 검사하는 값) 정도만 추가
어플리케이션에서 추가 작업이 필요


-- PORT --
PORT
: 같은 IP 내부에서 프로세스 구분

TCP/IP패킷)
출발지IP, PORT,
목적지IP, PORT,
전송데이터

PORT 구분)
0 ~ 65535: 할당 가능
0 ~ 1023: 잘 알려진 포트, 사용하지 않는 것 이 좋음
FTP:    20, 21
TELNET: 23
HTTP:   80
HTTPS:  443


-- DNS --
DNS
: 도메인 네임 시스템
  전화번호부, 도메인 명을 IP주소로 변환

사용이유)
IP는 기억하기 어렵다
IP는 변경될 수 있다(과거IP -> 신규IP)

DNS사용)
DNS 서버
도메인명   | IP
google.com | 210.210.210.3

인터넷 네트워크 정리)
인터넷통신
IP
TCP/UDP
PORT
DNS





